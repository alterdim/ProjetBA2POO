*Ajout titre du jeu dans la fenêtre

*Ajout de page de démarrage, permettant de modifier différents paramètres:
-Client : choix du pseudo, adresse et port du serveur
-Server : choix du pseudo

Cette page utilise des boutons qui sont associé à des TextInputDialog ou l'on peut renseigner nos choix concernant les différents paramètre, ou laisser les choix par défaut. Si le texte renseigné est vide (length =< 0), ou si le bouton annuler à été sélectionner, l'ancien texte est conservé.
Nous avons été contraint de définir Platform.setImplicitExit(false); pour permettre à la page de démarrage de se fermer une fois la partie démarrée. De plus nous faisons appel à la méthode setOnCloseRequest() exécutant System.exit(0) afin de stopper le programme lorsque que l'on ferme la fenêtre.

*Laisser au client le choix de son pseudo (au lieu que le serveur gère tout les pseudos)
--Attention, la communication en réseau à été modifiée et il se peut que notre jeu ne soit plus compatible avec les applications des autres groupes.
Nous renseignons le choix du pseudo (choisi grâce à la page de démarrage) en paramètre de RemotePlayerClient. Ce pseudo est renvoyé lorsque le client reçoit la nouvelle commande CHOOSE_USERNAME, définie dans MessageId. Le RemotePlayerProxy qui a envoyé cette commande attend attend la réception de la réponse. Cette réponse modifie la Map de pseudo qui est renseigné à la méthode play() de Game définie dans ServerMain.
Nous avons choisi de ne pas modifier l'interface Player, car le choix du pseudo est inutile dans les autres implémentations de cette interface.

*Ajout animation lors du survol avec la souris du deck de cartes quand c'est son tour.
Il a fallu rajouter du code dans decks.css

*Ajout d'un indicateur concernant les stations de départs et d'arrivées associées aux tickets sélectionné par le joueur
Il a fallu récupéré les coordonnées de chaque stations, elles ont été renseignée dans map.css, en s'inspirant de ce qui été utilisé pour les tronçons, associé avec leurs id (le nom n'est pas unique et en plus les accents auraient posé problème). Ensuite il a fallu rajouter des méthodes à la classe Ticket permettant de récupérer les stations. Dans MapViewCreator, nous avons rajouter un ChangeListener pour agir dès que la main du joueur à de nouveaux tickets, un cercle est rajouter à la carte, avec des propriétés suffisamment similaire aux tronçons pour ne pas être expliquer.

*Ajout possibilité de jouer a 3 parties : pour activer, il faut décommenter PLAYER_3 dans PlayerId.
Il a fallu rajouter des éléments dans les fichiers css (dans maps et color) pour PLAYER_3 (similaire aux autres joueurs). Rajouter un joueur dans PlayerId. Dans ObservableGameState, pour correspondre à une règle pour les parties à plusieurs joueurs, permettre à un joueur différent de s'emparer du deuxième tronçon d'une route double. Et finalement il a fallu modifier dans ServerMain afin d'autoriser tous les clients.

*Ajout de spectateurs, ils doivent rejoindre la partie une fois qu'elle a commencé, ils voient l'état du joueur courant (change)
Il a fallu créer un GraphicalSpectator et un GraphicalSpectatorAdapter, également SpecatatorMain en temps que client. Et il a fallu modifier Game afin de mettre à jour (receiveInfo et updateState) les spectateurs. ServerMain autorise la connexions de spectateurs sur le port 5109.